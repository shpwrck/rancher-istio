{{ if eq .Values.provider "zipkin" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-tracing
  namespace: {{ .Release.Namespace }}
  labels:
    app: zipkin
    chart: {{ template "tracing.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: zipkin
  template:
    metadata:
      labels:
        app: zipkin
        chart: {{ template "tracing.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
      containers:
        - name: zipkin
          image: "{{ template "system_default_registry" . }}{{ .Values.zipkin.repository }}:{{ .Values.zipkin.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.zipkin.queryPort }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.zipkin.probeStartupDelay }}
            tcpSocket:
              port: {{ .Values.zipkin.queryPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.zipkin.probeStartupDelay }}
            httpGet:
              path: /health
              port: {{ .Values.zipkin.queryPort }}
          resources:
{{- if .Values.zipkin.resources }}
{{ toYaml .Values.zipkin.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: QUERY_PORT
              value: "{{ .Values.zipkin.queryPort }}"
            - name: JAVA_OPTS
              value: "-XX:ConcGCThreads={{ .Values.zipkin.node.cpus }} -XX:ParallelGCThreads={{ .Values.zipkin.node.cpus }} -Djava.util.concurrent.ForkJoinPool.common.parallelism={{ .Values.zipkin.node.cpus }} -Xms{{ .Values.zipkin.javaOptsHeap }}M -Xmx{{ .Values.zipkin.javaOptsHeap }}M -XX:+UseG1GC -server"
            - name: STORAGE_METHOD
              value: "mem"
            - name: ZIPKIN_STORAGE_MEM_MAXSPANS
              value: "{{ .Values.zipkin.maxSpans }}"
        - name: zipkin-proxy
          image: "{{ template "system_default_registry" . }}{{ .Values.global.nginxProxy.repository }}:{{ .Values.global.nginxProxy.tag }}"
          args:
          - nginx
          - -g
          - daemon off;
          - -c
          - /nginx/nginx.conf
          ports:
          - name: http
            containerPort: 80
            protocol: TCP
          volumeMounts:
          - mountPath: /nginx/
            name: tracing-nginx
          {{- if and .Values.zipkin.proxy .Values.zipkin.proxy.resources }}
          resources:
  {{ toYaml .Values.zipkin.proxy.resources | indent 12 }}
          {{- end }}
      volumes:
      - name: tracing-nginx
        configMap:
          name: tracing-nginx
          items:
          - key: nginx.conf
            mode: 438
            path: nginx.conf
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
      {{- end }}
{{ end }}
